<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--字符库-->
    <FontFamily x:Key="iconfont">pack://application:,,,/IMX.ATS.DIOS;component/Resource/Fonts/#iconfont</FontFamily>

    <!--窗口控件按钮-->
    <Style TargetType="Button" x:Key="ControlButtonStyle">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent" Height="30" Width="45" Name="back">
                        <Border Name="hover" Background="{TemplateBinding Background}" Visibility="Collapsed"/>
                        <TextBlock Text="{TemplateBinding Content}" FontFamily="{StaticResource iconfont}" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center" Name="txt"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="hover"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="DarkBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--开关按钮-->
    <Style TargetType="{x:Type CheckBox}" x:Key="Switch_CK">
        <Setter Property="FontFamily" Value="UniDreamLED"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Viewbox Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <Label Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" FontSize="{TemplateBinding FontSize}" Margin="0,0,2,0"/>
                            <Border x:Name="borden" Width="75" Height="28" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}" CornerRadius="13" BorderThickness="1">
                                <Grid>
                                    <Ellipse x:Name="state" Width="22" Height="22" Margin="2"  SnapsToDevicePixels="True" Fill="White" HorizontalAlignment="Left">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform x:Name="transState" X="0"/>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                    <Label Content="OFF" x:Name="text" VerticalAlignment="Center" HorizontalAlignment="Right" Foreground="White" FontSize="15"  FontFamily="{TemplateBinding FontFamily}">
                                        <Label.RenderTransform>
                                            <TranslateTransform x:Name="transText" X="-10"/>
                                        </Label.RenderTransform>
                                    </Label>
                                </Grid>
                            </Border>
                        </StackPanel>

                    </Viewbox>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="Green"/>
                            <Setter Property="Content" TargetName="text" Value="ON"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="transState" Storyboard.TargetProperty="X" From="0" To="45" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="transText" Storyboard.TargetProperty="X" From="-10" To="-30" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="transState" Storyboard.TargetProperty="X" From="45" To="0" Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="transText" Storyboard.TargetProperty="X" From="-30" To="-10" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="Red"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander IsExpanded="True">
                        <Expander.Header>
                            <TextBlock Text="{Binding Path=Name}"/>
                        </Expander.Header>
                        <ItemsPresenter />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--自定义左侧导航按钮-->
    <Style TargetType="RadioButton" x:Key="LeftMenuItemButtonStlye">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="80"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="Transparent" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Name="back" >
                        <TextBlock Text="{TemplateBinding Content}" FontFamily="{StaticResource iconfont}" Name="rb_Text"
                                       VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{TemplateBinding FontSize}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#11FFFFFF" TargetName="back"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#33FFFFFF" TargetName="back"/>
                            <Setter Property="Foreground" Value="LightGray" TargetName="rb_Text" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--自定义上方导航按钮-->
    <Style TargetType="RadioButton" x:Key="TopMenuItemButtonStlye">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Background" Value="#EEE"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="Transparent" Height="50" Name="back" >
                        <TextBlock Text="{TemplateBinding Content}" FontFamily="{StaticResource iconfont}"
                                       VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#11FFFFFF" TargetName="back"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="back">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFD1C8C8" Offset="0.439"/>
                                        <GradientStop Color="#11FFFFFF" Offset="1"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--常规TextBox样式-->
    <Style TargetType="TextBox">
        <Setter Property="Height" Value="30"/>
        <!--<Setter Property="FontSize" Value="14"/>-->
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" BorderBrush="Gray"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}"
                                 SnapsToDevicePixels="True"
                                 CornerRadius="5">
                        <Grid>
                            <TextBlock Text=" "  VerticalAlignment="Center" Foreground="#BBB"
                                            Name="MarkText" Visibility="Collapsed" FontSize="12" Margin="2,0" Height="20"/>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"
                                               HorizontalScrollBarVisibility="Hidden"
                                               VerticalScrollBarVisibility="Hidden"
                                               Grid.Column="1"
                                               VerticalAlignment="Center" MinHeight="20"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=Text,RelativeSource={RelativeSource Mode=Self}}" Value="">
                            <Setter Property="Visibility" TargetName="MarkText" Value="Visible"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--常规按钮样式-->
    <Style TargetType="Button">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Background" Value="DarkGray"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="3">
                        <Border Name="back" Width="{TemplateBinding Width}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"
                            Content="{TemplateBinding Content}" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#55FFFFFF" TargetName="back"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="DarkBlue"/>
                <!--<Setter Property="Foreground" Value="{Binding Tag,RelativeSource={RelativeSource Mode=Self}}"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--自定义下拉框-->
    <!-- 定义ComboBoxTextBox的样式模板 -->
    <Style TargetType="TextBox" x:Key="ComboBoxTextBox">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <!--<Setter Property="FontSize" Value="15"/>-->
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    <Style x:Key="ComboboxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="#787878"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="itemBorder" Height="20" Width="{TemplateBinding Width}" Background="Transparent" Margin="8" CornerRadius="5">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="#DBDBDB" TargetName="itemBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="MaxWidth" Value="30"/>
        <Setter Property="Margin" Value="0 0 5 5"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="MinHeight" Value="20"></Setter>
        <Setter Property="MinWidth" Value="5"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border   BorderBrush="#787878" Background="White"/>

                        <!--倒三角的颜色#0099ff-->
                        <Path Height="5" x:Name="Path1" HorizontalAlignment="Right" 
                                VerticalAlignment="Center" Margin="5,0,10,0" Width="8"
                                Fill="#FFA8AAAC" Stretch="Fill" Stroke="#808080"
                                Data="M0.5,0.5 L9.5,0.5 L5.0625,9.5 L5.0625,9.5 z" >
                        </Path>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <!--移入时按钮颜色 图案颜色 背景颜色 锯齿颜色-->
                            <Setter TargetName="Path1" Property="Fill" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBox">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="#B8B8B8" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="IsEditable" Value="False"/>
        <Setter Property="IsTextSearchEnabled" Value="True" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboboxItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border x:Name="border" BorderBrush="Gray" 
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}"
                                 SnapsToDevicePixels="True" 
                                 CornerRadius="5">
                        <Grid x:Name="mainGrid" Background="Transparent" >
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid MaxHeight="150" Width="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder"  BorderBrush="#e8e8e8" BorderThickness="1 0 1 1"/>
                                    <ScrollViewer Margin="1"  SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <!--StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True-->
                                        <StackPanel IsItemsHost="True"  KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton Grid.Column="1" Style="{StaticResource ComboBoxToggleButtonStyle}"  Background="Transparent" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <TextBox Grid.Column="0" Width="{TemplateBinding Width}" FontSize="{TemplateBinding FontSize}" Style="{StaticResource ComboBoxTextBox}" VerticalAlignment="Center" Text="{Binding Path=SelectedValue, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                            </Grid>
                          
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                            <Setter Property="IsEditable" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                            <Setter Property="IsEditable" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--标题框-->
    <Style  x:Key="TitleGroup" TargetType="GroupBox">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Margin="-7.5,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Content="{Binding}" FontSize="16" FontWeight="Bold">
                            <Label.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="LightGray" Offset="0"/>
                                    <GradientStop Color="#FFFAF9F9" Offset="1"/>
                                </LinearGradientBrush>
                            </Label.Background>
                        </Label>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>