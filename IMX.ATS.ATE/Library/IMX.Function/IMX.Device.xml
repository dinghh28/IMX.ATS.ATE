<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IMX.Device</name>
    </assembly>
    <members>
        <member name="T:IMX.Device.Acquisition.Acquisition_AN87330_Operate">
            <summary>
            艾诺87330功率分析仪操作类
            </summary>
        </member>
        <member name="P:IMX.Device.Acquisition.Acquisition_AN87330_Operate.Warp">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Acquisition.Acquisition_AN87330_Operate.SupportDeviceType">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Acquisition.Acquisition_AN87330_Operate.DeviceName">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Acquisition.Acquisition_AN87330_Operate.Device_ReadAll">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Acquisition.Acquisition_AN87330_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Acquisition.Acquisition_AN87330_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Acquisition.Acquisition_AN87330_Operate.#ctor">
            <inheritdoc/>
        </member>
        <member name="F:IMX.Device.Acquisition.Acquisition_AN87330_Warp.HEADER">
            <summary>
            帧头
            </summary>
        </member>
        <member name="F:IMX.Device.Acquisition.Acquisition_AN87330_Warp.END">
            <summary>
            帧尾
            </summary>
        </member>
        <member name="M:IMX.Device.Acquisition.Acquisition_AN87330_Warp.Device_ReadAll">
            <summary>
            单次扫描读取所有数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Acquisition.Acquisition_AN87330_Warp.ModbusCheck_03(System.Collections.Generic.IList{System.Byte})">
            <summary>
            modbus_03功能码校验
            </summary>
            <param name="value">待校验报文</param>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Acquisition.AN87330Data">
            <summary>
            艾诺8733分析仪读取数据类
            </summary>
        </member>
        <member name="P:IMX.Device.Acquisition.AN87330Data.EffectiveVol1">
            <summary>
            1通道有效电压值
            </summary>
        </member>
        <member name="P:IMX.Device.Acquisition.AN87330Data.EffectiveVol2">
            <summary>
            2通道有效电压值
            </summary>
        </member>
        <member name="P:IMX.Device.Acquisition.AN87330Data.EffectiveVol3">
            <summary>
            3通道有效电压值
            </summary>
        </member>
        <member name="P:IMX.Device.Acquisition.AN87330Data.EffectiveCur1">
            <summary>
            1通道有效电流值
            </summary>
        </member>
        <member name="P:IMX.Device.Acquisition.AN87330Data.EffectiveCur2">
            <summary>
            2通道有效电流值
            </summary>
        </member>
        <member name="P:IMX.Device.Acquisition.AN87330Data.EffectiveCur3">
            <summary>
            3通道有效电流值
            </summary>
        </member>
        <member name="T:IMX.Device.ACSource.ACSource_ANFH010S_Operate">
            <summary>
            艾诺ANFH010S系列交流源
            </summary>
        </member>
        <member name="P:IMX.Device.ACSource.ACSource_ANFH010S_Operate.Warp">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.ACSource.ACSource_ANFH010S_Operate.SupportDeviceType">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.ACSource.ACSource_ANFH010S_Operate.DeviceName">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.ACSource.ACSource_ANFH010S_Operate.SetOnOff(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.ACSource.ACSource_ANFH010S_Operate.SetValue_Singel(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.ACSource.ACSource_ANFH010S_Operate.Device_ReadAll">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.ACSource.ACSource_ANFH010S_Operate.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.ACSource.ACSource_ANFH010S_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.ACSource.ACSource_ANFH010S_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <inheritdoc/>
        </member>
        <member name="F:IMX.Device.ACSource.ACSource_ANFH010S_Warp.HEADER">
            <summary>
            帧头
            </summary>
        </member>
        <member name="F:IMX.Device.ACSource.ACSource_ANFH010S_Warp.END">
            <summary>
            帧尾
            </summary>
        </member>
        <member name="F:IMX.Device.ACSource.ACSource_ANFH010S_Warp.IsOn">
            <summary>
            设备运行状态
            </summary>
        </member>
        <member name="M:IMX.Device.ACSource.ACSource_ANFH010S_Warp.SetOnOff(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            设备开关操作
            </summary>
            <param name="value">ON表示输入打开，OFF 表示输入关闭。</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.ACSource.ACSource_ANFH010S_Warp.SetGroupParameters(System.Double,System.Double)">
            <summary>
            艾诺组参数设置
            </summary>
            <param name="vol">电压</param>
            <param name="frq">频率</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.ACSource.ACSource_ANFH010S_Warp.ReadElectrical">
            <summary>
            读取电气测量值
            </summary>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.APU.APU_IT6800_Operate">
            <summary>
            IT6800系列直流稳压源操作类
            </summary>
        </member>
        <member name="P:IMX.Device.APU.APU_IT6800_Operate.Warp">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.APU.APU_IT6800_Operate.SupportDeviceType">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.APU.APU_IT6800_Operate.DeviceName">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Operate.Device_ReadAll">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Operate.SetOnOff(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Operate.SetValue(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Operate.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <inheritdoc/>
        </member>
        <member name="F:IMX.Device.APU.APU_IT6800_Warp.HEADER">
            <summary>
            帧头
            </summary>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Warp.SetRemote(System.Boolean)">
            <summary>
            远程模式设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Warp.SetOnOff(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            设备开关操作
            </summary>
            <param name="value">ON表示输入打开，OFF 表示输入关闭。</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Warp.Set_Value(System.Double,System.Double)">
            <summary>
            电压电流参数设置
            </summary>
            <param name="Vvalue">启动电压</param>
            <param name="Ivalue">启动电流</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Warp.ReadElectrical">
            <summary>
            读取电气信息
            </summary>
            <returns>操作结果@双精度浮点数列表</returns>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Warp.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.APU.APU_IT6800_Warp.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <inheritdoc/>
        </member>
        <member name="T:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte">
            <summary>
            艾诺AN23600E系列直流负载操作类
            </summary>
        </member>
        <member name="P:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.Warp">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.SupportDeviceType">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.DeviceName">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.Device_ReadAll">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.SetShort(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.SetCurrSLEW_POSitive(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.SetCurrSLEW_NEGative(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.SetModelAndValue(System.String,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.SetLoadValue(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.SetModel(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Opearte.#ctor(Super.Zoo.Framework.Logger.ILogger,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <inheritdoc/>
        </member>
        <member name="T:IMX.Device.DCLoad.DCLoad_AN23600E_Warp">
            <summary>
            艾诺AN23600E系列直流负载通讯类
            </summary>
        </member>
        <member name="F:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.SetModel">
            <summary>
            设置模式
            </summary>
        </member>
        <member name="F:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.SetShortState">
            <summary>
            短路模式
            </summary>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.SetOnOff(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            打开/关闭负载
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.Device_SetRespond_Volt(System.Int32)">
            <summary>
            设置电压回复速度
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.GetModel(System.String)">
            <summary>
            获取兼容的拉载模式
            </summary>
            <param name="eModel"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.Device_SetModelNum(System.String)">
            <summary>
            设置拉载模式（斯康达模态）
            </summary>
            <param name="eModel">拉载方式</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.Device_SetValue(System.Double)">
            <summary>
            设置拉载值(外部谨慎调用，因为必须先调用Device_SetModel且设置成功才可以调用本方法)
            </summary>
            <param name="value">拉载值</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.Device_SetValue_Volt(System.Double)">
            <summary>
            设置CV模式下.拉载电压值
            </summary>
            <param name="value">拉载电压值</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.Device_SetValue_Curr(System.Double)">
            <summary>
            设置CC模式下.拉载电流值
            </summary>
            <param name="value">拉载电流值</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.Device_SetValue_Res(System.Double)">
            <summary>
            设置CR模式下.拉载电阻值
            </summary>
            <param name="value">拉载电阻值</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.Device_SetModelAndValue(System.String,System.Double,System.Boolean)">
            <summary>
            设置拉载模式和拉载值
            </summary>
            <param name="eModel"></param>
            <param name="value"></param>
            <param name="bIsFirstOff">true-会先调用停止命令, fasle-不调用停止命令</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.Device_SetShortONOFF(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            开启/关闭负载短路模式
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.Device_SetCurrSLEW_POSitive(System.Double)">
            <summary>
            设置电流上升速率(A/μs)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.DCLoad.DCLoad_AN23600E_Warp.Device_SetCurrSLEW_NEGative(System.Double)">
            <summary>
            设置电流下降速率(A/μs)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.DCLoad.DCLoad_Model">
            <summary>
            DC负载拉载模式
            </summary>
        </member>
        <member name="F:IMX.Device.DCLoad.DCLoad_Model.CC">
            <summary>
            恒电流模式
            </summary>
        </member>
        <member name="F:IMX.Device.DCLoad.DCLoad_Model.CV">
            <summary>
            恒电压模式
            </summary>
        </member>
        <member name="F:IMX.Device.DCLoad.DCLoad_Model.CR">
            <summary>
            恒电阻模式
            </summary>
        </member>
        <member name="T:IMX.Device.HVDCSource.HVDCSource_AN50300_Operate">
            <summary>
            艾诺AN50300高压直流源操作类
            </summary>
        </member>
        <member name="P:IMX.Device.HVDCSource.HVDCSource_AN50300_Operate.Warp">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.HVDCSource.HVDCSource_AN50300_Operate.SupportDeviceType">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.HVDCSource.HVDCSource_AN50300_Operate.DeviceName">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.HVDCSource.HVDCSource_AN50300_Operate.SetOnOff(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.HVDCSource.HVDCSource_AN50300_Operate.SetValue(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.HVDCSource.HVDCSource_AN50300_Operate.Device_ReadAll">
            <inheritdoc/>
        </member>
        <member name="F:IMX.Device.HVDCSource.HVDCSource_AN50300_Warp.HEADER">
            <summary>
            帧头
            </summary>
        </member>
        <member name="F:IMX.Device.HVDCSource.HVDCSource_AN50300_Warp.END">
            <summary>
            帧尾
            </summary>
        </member>
        <member name="M:IMX.Device.HVDCSource.HVDCSource_AN50300_Warp.SetOnOff(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            设备开关操作
            </summary>
            <param name="value">ON表示输入打开，OFF 表示输入关闭。</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.HVDCSource.HVDCSource_AN50300_Warp.Set_Value(System.Double,System.Double)">
            <summary>
            电压电流参数设置
            </summary>
            <param name="Vvalue">启动电压</param>
            <param name="Ivalue">启动电流</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.HVDCSource.HVDCSource_AN50300_Warp.ReadOutPutVol">
            <summary>
            查询输出电压
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.HVDCSource.HVDCSource_AN50300_Warp.ReadOutPutCur">
            <summary>
            查询输出电压
            </summary>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Product.Product_CAN_Operate">
            <summary>
            CAN通讯类型产品操作类
            </summary>
        </member>
        <member name="P:IMX.Device.Product.Product_CAN_Operate.Warp">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Product.Product_CAN_Operate.SupportDeviceType">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Product.Product_CAN_Operate.DeviceName">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Product.Product_CAN_Operate.DicMessage">
            <summary>
            消息字典
            </summary>
        </member>
        <member name="P:IMX.Device.Product.Product_CAN_Operate.IsReceiveData">
            <summary>
            是否接收信号
            </summary>
        </member>
        <member name="P:IMX.Device.Product.Product_CAN_Operate.IsSendData">
            <summary>
            是否发送信号
            </summary>
        </member>
        <member name="P:IMX.Device.Product.Product_CAN_Operate.IsLoadFile">
            <summary>
            是否已加载DBC文件
            </summary>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.LoadMessageFile(System.String)">
            <summary>
            加载文件交互器
            </summary>
            <param name="path">文件地址</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.LoadMessageFile(Piggy.VehicleBus.Common.IMessageFileLoader)">
            <summary>
            加载文件交互器
            </summary>
            <param name="fileLoader">文件交互器</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.LoadMessageFile(System.Byte[],System.String)">
            <summary>
            加载文件交互器
            </summary>
            <param name="fileData"></param>
            <param name="suffix"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.Initialize">
            <summary>
            初始化
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.StartCommunication">
            <summary>
            启动交互器通讯
            </summary>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.StopCommunication">
            <summary>
            关闭交互器通讯
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.SetReceiveState(System.Boolean)">
            <summary>
            更改报文接收状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.LockMessages">
            <summary>
            锁定接收发送信号
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.SetReadSignal(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            设置上报/读取信号
            </summary>
            <param name="signals">信号名字典[信号名, 用户自定义名称]</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.ClearReadSignals">
            <summary>
            清除上报/读取列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.GetSignalsValue">
            <summary>
            获取上报列表所有信号值
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.GetSignalValue(System.String)">
            <summary>
            获取上报信号值
            </summary>
            <param name="signal"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.SetSendSignal(System.String)">
            <summary>
            设置交互器发送信号
            </summary>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.SetSendSignal(System.Collections.Generic.List{System.String})">
            <summary>
            设置交互器发送信号
            </summary>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.SetSendSignalValue(System.String,System.Double)">
            <summary>
            设置发送信号值
            </summary>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.StartSignalSend(System.String)">
            <summary>
            信号发送使能
            </summary>
            <param name="signal">信号名</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.StartSignalSend(System.Collections.Generic.List{System.String})">
            <summary>
            信号发送使能
            </summary>
            <param name="signals">信号名列表</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.StopSignalSend(System.String)">
            <summary>
            停止信号发送(若消息仍在发送，则发送默认值)
            </summary>
            <param name="signal">信号名</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.StopSignalSend(System.Collections.Generic.List{System.String})">
            <summary>
            停止信号发送(若消息仍在发送，则发送默认值)
            </summary>
            <param name="signals">信号名列表</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.DeleteSendSignal(System.String)">
            <summary>
            删除发送信号
            </summary>
            <param name="signal"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.ClearSendSignal">
            <summary>
            清除下发信号
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.CalcMessageValue">
            <summary>
            计算信号下发值
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.SetCustomMessage(System.Collections.Generic.List{Piggy.VehicleBus.Common.CustomMessage})">
            <summary>
            设置自定义下发报文(自动清空当前已存在自定义报文)
            </summary>
            <param name="messages"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.AddCustomMessage(Piggy.VehicleBus.Common.CustomMessage)">
            <summary>
            添加自定义报文(覆盖)
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.AddCustomMessage(System.Collections.Generic.List{Piggy.VehicleBus.Common.CustomMessage})">
            <summary>
            添加自定义报文(覆盖)
            </summary>
            <param name="messages"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.Device_ReadAll">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <summary>
            构造方法
            </summary>
            <param name="logger">日志交互器</param>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <summary>
            构造方法
            </summary>
            <param name="logger">日志交互器</param>
            <param name="drive">驱动接口</param>
        </member>
        <member name="P:IMX.Device.Product.Product_CAN_Warp.MessageInteractor">
            <summary>
            交互器
            </summary>
        </member>
        <member name="P:IMX.Device.Product.Product_CAN_Warp.DicMessage">
            <summary>
            消息字典
            </summary>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.Initialize">
            <summary>
            交互器初始化
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.LoadMessageFile(System.String)">
            <summary>
            加载DBC文件
            </summary>
            <param name="path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.LoadMessageFile(Piggy.VehicleBus.Common.IMessageFileLoader)">
            <summary>
            加载消息加载器
            </summary>
            <param name="loader">消息加载器</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.LoadMessageFile(System.Byte[],System.String)">
            <summary>
            加载DBC文件
            </summary>
            <param name="fileData">文件内容</param>
            <param name="suffix">文件后缀</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StartCommunication">
            <summary>
            启动交互器通讯
            </summary>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StopCommunication">
            <summary>
            关闭交互器通讯
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.SetReceiveState(System.Boolean)">
            <summary>
            设置报文接收状态
            </summary>
            <param name="isStart">是否开启报文接收</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.LockMessages">
            <summary>
            构造信号列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.SetReadSignal(System.Collections.Generic.List{System.String})">
            <summary>
            设置上报列表
            </summary>
            <param name="signals">信号字典[信号名，用户自定义名称]</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.ClearReadSignal">
            <summary>
            清除上报列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.GetSignalsValue">
            <summary>
            获取上报列表所有信号值
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.GetSignalValue(System.String)">
            <summary>
            获取上报信号值
            </summary>
            <param name="signal"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.SetSendSignal(System.String)">
            <summary>
            设置交互器发送信号
            </summary>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.SetSendSignal(System.Collections.Generic.List{System.String})">
            <summary>
            设置交互器发送信号
            </summary>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.DeleteSendSignal(System.String)">
            <summary>
            删除发送信号
            </summary>
            <param name="signal">信号名称</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.DeleteSendSignal(System.Collections.Generic.List{System.String})">
            <summary>
            删除发送信号
            </summary>
            <param name="signal">信号名称列表</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.ClearSendSignal">
            <summary>
            清除发送信号
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StartSignalSend(System.String)">
            <summary>
            信号发送使能
            </summary>
            <param name="signal">信号名</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StartSignalSend(System.Collections.Generic.List{System.String})">
            <summary>
            信号发送使能
            </summary>
            <param name="signals">信号名列表</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StopSignalSend(System.String)">
            <summary>
            停止信号发送(若消息仍在发送，则发送默认值)
            </summary>
            <param name="signal">信号名</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StopSignalSend(System.Collections.Generic.List{System.String})">
            <summary>
            停止信号发送(若消息仍在发送，则发送默认值)
            </summary>
            <param name="signals">信号名列表</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.SetSendSignalValue(System.String,System.Double)">
            <summary>
            设置发送信号值
            </summary>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.CalcMessageValue">
            <summary>
            计算下发信号
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StartMessageSend(System.String)">
            <summary>
            开始消息发送
            </summary>
            <param name="message">消息名称</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StartMessageSend(System.Collections.Generic.List{System.String})">
            <summary>
            开始消息发送
            </summary>
            <param name="messages">消息名称列表</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StartMessageSend(System.UInt32)">
            <summary>
            开始消息发送
            </summary>
            <param name="messageId">消息名称</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StartMessageSend(System.Collections.Generic.List{System.UInt32})">
            <summary>
            开始消息发送
            </summary>
            <param name="messages">消息名称列表</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StopMessageSend(System.String)">
            <summary>
            停止消息发送
            </summary>
            <param name="message">消息名称</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StopMessageSend(System.Collections.Generic.List{System.String})">
            <summary>
            停止消息发送
            </summary>
            <param name="messages">消息名称列表</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StopMessageSend(System.UInt32)">
            <summary>
            停止消息发送
            </summary>
            <param name="message">消息帧ID</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.StopMessageSend(System.Collections.Generic.List{System.UInt32})">
            <summary>
            停止消息发送
            </summary>
            <param name="messages">消息ID列表</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.SetCustomMessage(System.Collections.Generic.List{Piggy.VehicleBus.Common.CustomMessage})">
            <summary>
            设置自定义下发报文(自动清空当前已存在自定义报文)
            </summary>
            <param name="messages"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.AddCustomMessage(Piggy.VehicleBus.Common.CustomMessage)">
            <summary>
            添加自定义报文(覆盖)
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Product.Product_CAN_Warp.AddCustomMessage(System.Collections.Generic.List{Piggy.VehicleBus.Common.CustomMessage})">
            <summary>
            添加自定义报文(覆盖)
            </summary>
            <param name="messages"></param>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Relay.LightType">
            <summary>
            指示灯指示类型
            </summary>
        </member>
        <member name="F:IMX.Device.Relay.LightType.DEFALT">
            <summary>
            常规状态
            </summary>
        </member>
        <member name="F:IMX.Device.Relay.LightType.RUNING">
            <summary>
            运行状态
            </summary>
        </member>
        <member name="F:IMX.Device.Relay.LightType.ERROR">
            <summary>
            故障状态
            </summary>
        </member>
        <member name="F:IMX.Device.Relay.LightType.BUZZER_CLR">
            <summary>
            清除蜂鸣器
            </summary>
        </member>
        <member name="F:IMX.Device.Relay.LightType.ERROR_CLR">
            <summary>
            故障状态清除
            </summary>
        </member>
        <member name="T:IMX.Device.Relay.Relay_ZS_Operate">
            <summary>
            中盛继电器操作类
            </summary>
        </member>
        <member name="P:IMX.Device.Relay.Relay_ZS_Operate.Warp">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Relay.Relay_ZS_Operate.SupportDeviceType">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Relay.Relay_ZS_Operate.DeviceName">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Operate.Device_ReadAll">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Operate.Device_Set(System.UInt32,IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Operate.Device_SetAll(System.Collections.Generic.List{IMX.Device.Common.Enumerations.DeviceOutPutState})">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Operate.Device_SetAll(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Operate.SateLedContrcl(IMX.Device.Relay.LightType)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Operate.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Warp.SetAll(System.Collections.Generic.List{IMX.Device.Common.Enumerations.DeviceOutPutState})">
            <summary>
            设备全操作
            </summary>
            <param name="value">0表示输入关，1 表示开。</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Warp.SetAll(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            设备全操作
            </summary>
            <param name="value">0表示输入关，1 表示开。</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Warp.Set_Value(System.UInt32,IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            单继电器控制
            </summary>
            <param name="channel">对应寄存器地址（从1开始算）</param>
            <param name="value">输出状态</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Warp.Set_Value(System.String)">
            <summary>
            全通道设置
            </summary>
            <param name="value">bit字符串</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Warp.Set_Led(IMX.Device.Common.Enumerations.DeviceOutPutState,IMX.Device.Common.Enumerations.DeviceOutPutState,IMX.Device.Common.Enumerations.DeviceOutPutState,IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            
            </summary>
            <param name="value1">黄灯</param>
            <param name="value2">绿灯</param>
            <param name="value3">红灯</param>
            <param name="value4">蜂鸣器</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS_Warp.ReadAllInfo">
            <summary>
            读取所有通道状态
            </summary>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Relay.Relay_ZS4Bit_Operate">
            <summary>
            中盛继电器操作类
            </summary>
        </member>
        <member name="P:IMX.Device.Relay.Relay_ZS4Bit_Operate.Warp">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Relay.Relay_ZS4Bit_Operate.SupportDeviceType">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Relay.Relay_ZS4Bit_Operate.DeviceName">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Operate.Device_ReadAll">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Operate.Device_Set(System.UInt32,IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Operate.Device_SetAll(System.Collections.Generic.List{IMX.Device.Common.Enumerations.DeviceOutPutState})">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Operate.Device_SetAll(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Operate.SateLedContrcl(IMX.Device.Relay.LightType)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Operate.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Warp.SetAll(System.Collections.Generic.List{IMX.Device.Common.Enumerations.DeviceOutPutState})">
            <summary>
            设备全操作
            </summary>
            <param name="value">0表示输入关，1 表示开。</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Warp.SetAll(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            设备全操作
            </summary>
            <param name="value">0表示输入关，1 表示开。</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Warp.Set_Value(System.UInt32,IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            单继电器控制
            </summary>
            <param name="channel">对应寄存器地址（从1开始算）</param>
            <param name="value">输出状态</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Warp.Set_Value(System.String)">
            <summary>
            全通道设置
            </summary>
            <param name="value">bit字符串</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Relay.Relay_ZS4Bit_Warp.ReadAllInfo">
            <summary>
            读取所有通道状态
            </summary>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Base.DeviceInerfaces.IAcquisition">
            <summary>
            采样系统操作接口
            </summary>
        </member>
        <member name="T:IMX.Device.Base.DeviceInerfaces.IDCLoad">
            <summary>
            直流负载操作接口
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DeviceInerfaces.IDCLoad.SetShort(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            短路模式设置
            </summary>
            <param name="state">短路模式输出状态</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DeviceInerfaces.IDCLoad.SetCurrSLEW_POSitive(System.Double)">
            <summary>
            设置电流上升速率(A/μs)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DeviceInerfaces.IDCLoad.SetCurrSLEW_NEGative(System.Double)">
            <summary>
            设置电流下降速率(A/μs)
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DeviceInerfaces.IDCLoad.SetModelAndValue(System.String,System.Double)">
            <summary>
            设置拉载模式和拉载值
            </summary>
            <param name="eModel">拉载模式</param>
            <param name="value">拉载值</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DeviceInerfaces.IDCLoad.SetLoadValue(System.Double)">
            <summary>
            设置拉载值
            </summary>
            <param name="value">拉载值</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DeviceInerfaces.IDCLoad.SetModel(System.String)">
            <summary>
            设置拉载模式
            </summary>
            <param name="eModel">模式</param>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Base.IACSource">
            <summary>
            交流源操作接口
            </summary>
        </member>
        <member name="M:IMX.Device.Base.IACSource.SetOnOff(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            打开/关闭设备
            </summary>
            <param name="value">设备输出状态</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.IACSource.SetValue_Singel(System.Double,System.Double)">
            <summary>
            单通道设备设置（默认第一通路起效）
            </summary>
            <param name="vol">设置电压</param>
            <param name="frq">设置频率</param>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Base.IAPU">
            <summary>
            直流稳压源操作接口
            </summary>
        </member>
        <member name="M:IMX.Device.Base.IAPU.SetOnOff(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            打开/关闭设备
            </summary>
            <param name="value">设备输出状态</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.IAPU.SetValue(System.Double,System.Double)">
            <summary>
            电压电流参数设置
            </summary>
            <param name="Vvalue">电压</param>
            <param name="Ivalue">电流</param>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Base.IHVDCSource">
            <summary>
            高压直流源操作接口
            </summary>
        </member>
        <member name="M:IMX.Device.Base.IHVDCSource.SetOnOff(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            打开/关闭设备
            </summary>
            <param name="value">设备输出状态</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.IHVDCSource.SetValue(System.Double,System.Double)">
            <summary>
            电压电流参数设置
            </summary>
            <param name="Vvalue">电压</param>
            <param name="Ivalue">电流</param>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Base.IRelay">
            <summary>
            继电器板设备操作接口
            </summary>
        </member>
        <member name="M:IMX.Device.Base.IRelay.Device_Set(System.UInt32,IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            单继电器控制
            </summary>
            <param name="channel">继电器通道号(从1开始算)</param>
            <param name="value">输出状态</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.IRelay.Device_SetAll(System.Collections.Generic.List{IMX.Device.Common.Enumerations.DeviceOutPutState})">
            <summary>
            全通道控制
            </summary>
            <param name="Values">输出状态</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.IRelay.Device_SetAll(IMX.Device.Common.Enumerations.DeviceOutPutState)">
            <summary>
            全通道统一状态控制
            </summary>
            <param name="value">输出状态</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.IRelay.SateLedContrcl(IMX.Device.Relay.LightType)">
            <summary>
            指示灯控制逻辑
            </summary>
            <param name="light">指示灯输出状态</param>
            <returns></returns>
        </member>
        <member name="P:IMX.Device.Base.Device_Config.Device_Name">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="M:IMX.Device.Base.Device_Config.#ctor(System.String,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="path">完整全新的配置文件全路径名称</param>
        </member>
        <member name="M:IMX.Device.Base.Device_Config.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="index">索引第几个设备, 例如传参0表示"\\ConfigDevice\\DCSource_DS1000_0.ini"</param>
        </member>
        <member name="P:IMX.Device.Base.Device_Config.DeviceConfig">
            <summary>
            配置信息
            </summary>
        </member>
        <member name="T:IMX.Device.Base.Device_Operate">
            <summary>
            设备操作抽象类
            </summary>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.Identify">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.IsInitOK">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.Warp">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.Config">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.DeviceConfig">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.SupportDeviceType">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.DeviceName">
            <summary>
            设备名称
            </summary>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.Drive">
            <summary>
            设备操作
            </summary>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.Logger">
            <summary>
            日志注册器
            </summary>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.OutterLogger">
            <summary>
            外部日志注册器入驻标志
            </summary>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.LastError">
            <summary>
            最后一次故障信息
            </summary>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.ReadInfos">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.Device_Operate.DicReadInfo">
            <inheritdoc/>
        </member>
        <member name="F:IMX.Device.Base.Device_Operate.outtercom">
            <summary>
            外部串口传入
            </summary>
        </member>
        <member name="F:IMX.Device.Base.Device_Operate.dicDeviceSuffix">
            <summary>
            设备类型字典 [设备类型, 设备操作类型]
            </summary>
        </member>
        <member name="F:IMX.Device.Base.Device_Operate.lstDeviceType">
            <summary>
            设备操作类型列表
            </summary>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.Init(IMX.Device.Base.Device_Config,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.Init(IMX.Device.Common.DeviceArgs,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.Init(IMX.Device.Base.Device_Config)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.UnInit">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.Device_ReadAll">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.SetError(System.String)">
            <summary>
            设置错误信息
            </summary>
            <param name="error">异常信息</param>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.Create(IMX.Device.Common.EDeviceType,System.String)">
            <summary>
            创建驱动
            </summary>
            <param name="type">驱动类型</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.Create(Super.Zoo.Framework.Logger.ILogger,IMX.Device.Common.EDeviceType,System.String)">
            <summary>
            创建驱动
            </summary>
            <param name="logger">日志记录器</param>
            <param name="type">驱动类型</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.InitDriveSuffixDictionary(System.String)">
            <summary>
            初始化Visa驱动字典
            </summary>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <summary>
            构造方法
            </summary>
            <param name="logger">日志注册器</param>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.#ctor(Super.Zoo.Framework.Logger.ILogger,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <summary>
            构造方法
            </summary>
            <param name="logger">日志注册器</param>
            <param name="drive">驱动接口</param>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.Finalize">
            <summary>
            析构方法
            </summary>
        </member>
        <member name="M:IMX.Device.Base.Device_Operate.Dispose">
            <summary>
            析构方法
            </summary>
        </member>
        <member name="T:IMX.Device.Base.DeviceOperate.Device_Warp">
            <summary>
            设备通讯协议层抽象类
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DeviceOperate.Device_Warp.Identify">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.DeviceOperate.Device_Warp.Version">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.DeviceOperate.Device_Warp.IsInitOK">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.DeviceOperate.Device_Warp.Config">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.DeviceOperate.Device_Warp.Drive">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.DeviceOperate.Device_Warp.OutterLogger">
            <summary>
            外部日志注册器注入标志
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DeviceOperate.Device_Warp.LastError">
            <summary>
            上次故障信息
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DeviceOperate.Device_Warp.Logger">
            <summary>
            日志注册器
            </summary>
        </member>
        <member name="F:IMX.Device.Base.DeviceOperate.Device_Warp.OutterDrive">
            <summary>
            使用传入驱动
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DeviceOperate.Device_Warp.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DeviceOperate.Device_Warp.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <summary>
            构造方法
            </summary>
            <param name="logger">日志注册器</param>
        </member>
        <member name="M:IMX.Device.Base.DeviceOperate.Device_Warp.CreatDrive(IMX.Device.Common.DriveArgs)">
            <summary>
            创建新驱动
            </summary>
            <param name="config">设备配置信息</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DeviceOperate.Device_Warp.Device_Init(IMX.Device.Common.DeviceArgs,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.DeviceOperate.Device_Warp.Device_Uinit">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.DeviceOperate.Device_Warp.Device_Uinit(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.DeviceOperate.Device_Warp.SetError(System.String)">
            <summary>
            故障信息注入
            </summary>
            <param name="error">故障信息</param>
        </member>
        <member name="M:IMX.Device.Base.DeviceOperate.Device_Warp.Finalize">
            <summary>
            析构方法
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DeviceOperate.Device_Warp.Dispose">
            <summary>
            析构方法
            </summary>
        </member>
        <member name="T:IMX.Device.Base.IDeviceOperate">
            <summary>
            设备操作接口
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceOperate.IsInitOK">
            <summary>
            初始化状态
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceOperate.Warp">
            <summary>
            设备报文
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceOperate.Config">
            <summary>
            设备配置
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceOperate.DeviceConfig">
            <summary>
            设备配置
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceOperate.SupportDeviceType">
            <summary>
            设备类型
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceOperate.DeviceName">
            <summary>
            设备型号编号
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceOperate.Drive">
            <summary>
            设备通讯接口信息
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceOperate.ReadInfos">
            <summary>
            设备读取内容
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceOperate.DicReadInfo">
            <summary>
            设备读取内容对应index地址
            </summary>
        </member>
        <member name="M:IMX.Device.Base.IDeviceOperate.Init(IMX.Device.Base.Device_Config,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <summary>
            设备初始化
            </summary>
            <param name="obj">初始化参数(xml文件)</param>
            <param name="drive">驱动操作句柄</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.IDeviceOperate.Init(IMX.Device.Common.DeviceArgs,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <summary>
            设备初始化
            </summary>
            <param name="obj">初始化参数</param>
            <param name="drive">驱动操作句柄</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.IDeviceOperate.UnInit">
            <summary>
            设备卸载
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.IDeviceOperate.Device_ReadAll">
            <summary>
            读取设备信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Base.IDeviceWarp">
            <summary>
            设备协议层接口
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceWarp.Version">
            <summary>
            版本信息
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceWarp.IsInitOK">
            <summary>
            设备初始化状态
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceWarp.Drive">
            <summary>
            通讯接口
            </summary>
        </member>
        <member name="P:IMX.Device.Base.IDeviceWarp.Config">
            <summary>
            设备配置信息
            </summary>
        </member>
        <member name="M:IMX.Device.Base.IDeviceWarp.Device_Init(IMX.Device.Common.DeviceArgs,IMX.Device.Base.DriveOperate.ISuperDrive)">
            <summary>
            设备初始化
            </summary>
            <param name="config">设备配置信息</param>
            <param name="com">串口</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.IDeviceWarp.Device_Uinit">
            <summary>
            设备卸载
            </summary>
            <returns></returns>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.DriveOperate.Drive">
            <summary>
            设备通讯接口
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.DriveOperate.DriveConfig">
            <summary>
            通讯接口信息
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.DriveOperate.Logger">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.DriveOperate.OutterLogger">
            <summary>
            使用传入日志记录器
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.DriveOperate.LastError">
            <summary>
            最后一次故障信息
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.DriveOperate.CanRemove">
            <summary>
            是否可以移除改句柄
            </summary>
        </member>
        <member name="F:IMX.Device.Base.DriveOperate.DriveOperate.deviceOperation">
            <summary>
            设备操作锁对象
            </summary>
        </member>
        <member name="F:IMX.Device.Base.DriveOperate.DriveOperate.dicDeviceOperate">
            <summary>
            设备操作器字典
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.DriveOperate.RegisterDevice(IMX.Device.Common.DeviceArgs)">
            <summary>
            注册设备
            </summary>
            <param name="guid">设备操作接口guid</param>
            <param name="resourcestring">设备串口资源信息</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.DriveOperate.UnregisterDevice(System.Guid)">
            <summary>
            设备注销
            </summary>
            <param name="guid">设备操作接口guid</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.DriveOperate.UnregisterDevice(IMX.Device.Base.IDeviceOperate)">
            <summary>
            设备注销(串口无设备时，卸载)
            </summary>
            <param name="operate">设备操作句柄</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.DriveOperate.RemoveAllDevice">
            <summary>
            移除所有设备
            </summary>
            <returns>操作结果</returns>
        </member>
        <member name="T:IMX.Device.Base.DriveOperate.ISuperDrive">
            <summary>
            设备通讯设备底层接口
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.ISuperDrive.IsDriveOpen">
            <summary>
            通讯设备打开状态
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.ISuperDrive.DriveConfig">
            <summary>
            通讯配置
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.ISuperDrive.IsClearBuffer">
            <summary>
            是否清空缓存区
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.ISuperDrive.ReOpen_MaxWriteFailCount">
            <summary>
            设备复位.发送命令失败次数达到3次.那么就启用设备复位功能(默认值为3)
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.ISuperDrive.ReOpen_CurWriteFailCount">
            <summary>
            设备复位.当前发送命令失败次数(默认值为3)
            <para>a.每次发送成功后该变量置为0</para>
            <para>b.每次复位后该变量置为0</para>
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.ISuperDrive.ReOpen_MinIntervalMS">
            <summary>
            设备复位.两次复位之间的时间间隔默认至少要间隔10秒以上(默认值为10000ms)
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.ISuperDrive.IsWriteCmdWithNewLine">
            <summary>
            <remarks>
                <description>发送命令字符串的时候是否主要去增加【\n】换行符</description>
                    <list type="table">
                    <listheader>【默认值】</listheader>
                        <item>[ASRL]</item>
                        <description>True</description>
                        <item>[GPIB]</item>
                        <description>True</description>
                        <item>[USB]</item>
                        <description>True</description>
                        <item>[TCPIP]</item>
                        <description>True</description>
                        <item>[CAN]</item>
                        <description>Flase</description>
                        <item>[CANFD]</item>
                        <description>Flase</description>
                        <item>[Others]</item>
                        <description>True</description>
                    </list>
            </remarks>
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.ISuperDrive.WriteCmdWithNewLine">
            <summary>
            主动加换行符是"\r\n"还是"\n"
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.ISuperDrive.SupportFuncitonType">
            <summary>
            支持驱动类型
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.ISuperDrive.Open(IMX.Device.Common.DriveArgs)">
            <summary>
            打开驱动
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.ISuperDrive.Close">
            <summary>
            关闭驱动
            </summary>
            <returns></returns>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.Inerfaces.IVisaDrive.Session">
            <summary>
            通讯串口
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.Inerfaces.IVisaDrive.ClearBuffer">
            <summary>
            驱动输入/输出缓存清除
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.Inerfaces.IVisaDrive.Write(System.String)">
            <summary>
            写数据_字符串
            </summary>
            <param name="writeValue"></param>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.Inerfaces.IVisaDrive.Write_ByteArray(System.Byte[])">
            <summary>
            写数据_字节数组;
            </summary>
            <param name="writeValue"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.Inerfaces.IVisaDrive.Read_String">
            <summary>
            读数据_返回符字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.Inerfaces.IVisaDrive.Read_StringExisting">
            <summary>
            读数据_返回已去掉换行符字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.Inerfaces.IVisaDrive.Read_ByteArray(System.Int32)">
            <summary>
            读数据_返回字节数组;
            </summary>
            <param name="readCount">小于等于那就读取整行</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.Inerfaces.IVisaDrive.WriteRead_String(System.String,System.Int32,System.Boolean)">
            <summary>
            写入字符串 并 读取字符串结果值;
            </summary>
            <param name="writeValue">写入的命令字符串(字符串结尾没有换行符会自动补上)</param>
            <param name="delayMS">写入之后延时多少毫秒再进行读取(传-1表示使用本对象属性DelayMS的值, 传其他值则按入参值进行延迟读取)</param>
            <param name="bIsRead_StringExisting">读取字符串方式(默认false-使用Read_ByteArray(-1), true-使用Read_StringExisting)</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.Inerfaces.IVisaDrive.WriteRead_ByteArray(System.Byte[],System.Int32)">
            <summary>
            写入字符串 并 读取Byte结果值;
            </summary>
            <param name="writeValue">写入的命令字节</param>
            <param name="delayMS">写入之后延时多少毫秒再进行读取(传-1表示使用本对象属性DelayMS的值, 传其他值则按入参值进行延迟读取);</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.Inerfaces.IVisaDrive.WriteRead_ByteArray(System.Byte[],System.Int32,System.Int32)">
            <summary>
            写入字符串 并 读取Byte结果值;
            </summary>
            <param name="writeValue">写入的命令字节</param>
            <param name="Len">读取的字节数</param>
            <param name="delayMS">写入之后延时多少毫秒再进行读取(传-1表示使用本对象属性DelayMS的值, 传其他值则按入参值进行延迟读取);</param>
            <returns></returns>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.ASRLOprate.IsUseSerial">
            <summary>
            是否使用原生接口
            </summary>
        </member>
        <member name="F:IMX.Device.Base.DriveOperate.ASRLOprate._strLastWriteCmd">
            <summary>
            上次发送的命令字符串;
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.ASRLOprate.GetByteNum">
            <summary>
            获取串口字节数
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.ASRLOprate.Create">
            <summary>
            创建设备ASRL操作类
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.ASRLOprate.Create(Super.Zoo.Framework.Logger.ILogger)">
            <summary>
            创建设备ASRL操作类
            </summary>
            <param name="logger">日志记录器</param>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Base.DriveOperate.GPIBOprate">
            <summary>
            GPIB驱动操作类
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.GPIBOprate.Create">
            <summary>
            创建设备GPIB操作类
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.GPIBOprate.Create(Super.Zoo.Framework.Logger.ILogger)">
            <summary>
            创建设备GPIB操作类
            </summary>
            <param name="logger">日志记录器</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.TCPIPOprate.Create">
            <summary>
            创建设备ASRL操作类
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.TCPIPOprate.Create(Super.Zoo.Framework.Logger.ILogger)">
            <summary>
            创建设备ASRL操作类
            </summary>
            <param name="logger">日志记录器</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.USBOprate.Create">
            <summary>
            创建设备ASRL操作类
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.USBOprate.Create(Super.Zoo.Framework.Logger.ILogger)">
            <summary>
            创建设备ASRL操作类
            </summary>
            <param name="logger">日志记录器</param>
            <returns></returns>
        </member>
        <member name="T:IMX.Device.Base.DriveOperate.SuperDriveOprate">
            <summary>
            驱动操作类
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.SuperDriveOprate.IsClearBuffer">
            <summary>
            是否清空缓存区
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.SuperDriveOprate.Logger">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.SuperDriveOprate.OutterLogger">
            <summary>
            使用传入日志记录器
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.SuperDriveOprate.LastError">
            <summary>
            最后一次故障信息
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.SuperDriveOprate.DelayMS_Read_ByteArray">
            <summary>
            每次读取之间延时毫秒(默认100ms)
            </summary>
        </member>
        <member name="F:IMX.Device.Base.DriveOperate.SuperDriveOprate.dicDriveSuffix">
            <summary>
            试验配置类型字典 [试验类型, 试验配置文件类型]
            </summary>
        </member>
        <member name="F:IMX.Device.Base.DriveOperate.SuperDriveOprate.lstDriveType">
            <summary>
            试验配置文件类型列表
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.SuperDriveOprate.Create(IMX.Device.Common.DriveType)">
            <summary>
            创建驱动
            </summary>
            <param name="type">驱动类型</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.SuperDriveOprate.Create(Super.Zoo.Framework.Logger.ILogger,IMX.Device.Common.DriveType)">
            <summary>
            创建驱动
            </summary>
            <param name="logger">日志记录器</param>
            <param name="type">驱动类型</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.SuperDriveOprate.InitDriveSuffixDictionary">
            <summary>
            初始化Visa驱动字典
            </summary>
        </member>
        <member name="T:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate">
            <summary>
            VehicleBus设备驱动类
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.IsWriteCmdWithNewLine">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.WriteCmdWithNewLine">
            <inheritdoc/>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.DeviceOperator">
            <summary>
            CAN总线操作接口
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.Interactor">
            <summary>
            交互器
            </summary>
        </member>
        <member name="F:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.vehiclebusdrivetype">
            <summary>
            驱动类型
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.RegisterInteractor(IMX.Device.Common.DriveArgs)">
            <summary>
            注册交互器
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.RegisterInteractor(IMX.Device.Common.DriveArgs,Piggy.VehicleBus.Common.IRecorder)">
            <summary>
            注册交互器
            </summary>
            <param name="config"></param>
            <param name="recorder"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.RegisterInteractor(Piggy.VehicleBus.Common.IVehicleBusChannelArgs)">
            <summary>
            注册交互器
            </summary>
            <param name="channelArgs">通道参数</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.RegisterInteractor(Piggy.VehicleBus.Common.IVehicleBusChannelArgs,Piggy.VehicleBus.Common.IRecorder)">
            <summary>
            注册交互器
            </summary>
            <param name="channelArgs"></param>
            <param name="recorder"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.UnRegisterInteractor(System.UInt32)">
            <summary>
            注销交互器
            </summary>
            <param name="index">can通道号</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.OpenInteractor(Piggy.VehicleBus.Common.IMessageInteractor)">
            <summary>
            打开交互器(同时会对交互器初始化)
            </summary>
            <param name="interactor">交互器</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.OpenInteractor(System.UInt32)">
            <summary>
            打开交互器(同时会对交互器初始化)
            </summary>
            <param name="index">驱动通道号</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.CloseInteractor(Piggy.VehicleBus.Common.IMessageInteractor)">
            <summary>
            关闭交互器
            </summary>
            <param name="interactor">交互器</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.CloseInteractor(System.UInt32)">
            <summary>
            关闭交互器
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.SendFrame(System.UInt32,Piggy.VehicleBus.Common.FrameObject)">
            <summary>
            发送信号
            </summary>
            <param name="channelIndex"></param>
            <param name="frameObject"></param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.Create">
            <summary>
            创建设备CAN操作类
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.Create(Super.Zoo.Framework.Logger.ILogger)">
            <summary>
            创建设备CAN操作类
            </summary>
            <param name="logger">日志记录器</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.#ctor">
            <summary>
            无参构造
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VehicleBusDriveOprate.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <summary>
            构造方法
            </summary>
            <param name="logger">日志记录器</param>
        </member>
        <member name="T:IMX.Device.Base.DriveOperate.VisaOprate">
            <summary>
            NIVISA驱动操作抽象类
            </summary>
        </member>
        <member name="P:IMX.Device.Base.DriveOperate.VisaOprate.Session">
            <summary>
            当前设备对象
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.GetConfig(IMX.Device.Common.DriveArgs)">
            <summary>
            解析驱动配置信息
            </summary>
            <param name="config">驱动配置</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.Close">
            <summary>
            关闭驱动
            </summary>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.ClearBuffer">
            <summary>
            清除驱动当前缓存字节
            </summary>
            <returns></returns>
        </member>
        <member name="F:IMX.Device.Base.DriveOperate.VisaOprate._strLastWriteCmd">
            <summary>
            上次发送的命令字符串;
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.Write(System.String)">
            <summary>
            字符串写入
            </summary>
            <param name="writeValue">待发送字符串</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.Write_ByteArray(System.Byte[])">
            <summary>
            写入字节
            </summary>
            <param name="writeValue">待写入字节数组</param>
            <returns></returns>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.Read_ByteArray(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.Read_String">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.Read_StringExisting">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.WriteRead_ByteArray(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.WriteRead_ByteArray(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.WriteRead_String(System.String,System.Int32,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.#ctor(Super.Zoo.Framework.Logger.ILogger)">
            <summary>
            构造方法
            </summary>
            <param name="logger">日志注册器</param>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.Finalize">
            <summary>
            析构方法
            </summary>
        </member>
        <member name="M:IMX.Device.Base.DriveOperate.VisaOprate.Dispose">
            <summary>
            析构方法
            </summary>
        </member>
    </members>
</doc>
